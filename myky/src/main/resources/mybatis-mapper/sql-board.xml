<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamgyodong.myky.board.mapper.BoardMapper">
	
	
	<select id="selectBoardList" parameterType="hashmap" resultType="teamgyodong.myky.board.model.board">
		SELECT 
		    F.*,  U.*, TO_CHAR(F.UPDATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS updatedTime ,
		    (SELECT COUNT(*)
		    FROM FREE_BOARD_COMMENT C
		    WHERE C.BOARD_ID = F.BOARD_ID) AS COMMENT_COUNT
		FROM 
		    FREE_BOARD F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		WHERE 
		    1=1
		    <if test="searchOption != null and searchOption == 'all'">
		        AND (F.TITLE LIKE '%' || #{keyword} || '%' 
		        OR F.CONTENT LIKE '%' || #{keyword} || '%'
		        OR U.NICKNAME LIKE '%' || #{keyword} || '%'
		        OR F.USER_ID LIKE '%' || #{keyword} || '%')
		    </if>
		    <if test="searchOption != null and searchOption == 'title'">
		        AND F.TITLE LIKE '%' || #{keyword} || '%'
		    </if>
		 	<if test="searchOption != null and searchOption == 'userId'">
			    AND (F.USER_ID LIKE '%' || #{keyword} || '%'
		        OR U.NICKNAME LIKE '%' || #{keyword} || '%')
			</if>
			<if test="searchOption != null and searchOption == 'userId2'">
                AND (F.USER_ID LIKE '%' || #{keyword} || '%'
                AND F.TITLE LIKE '%' || #{keyword2} || '%')
            </if>
		    AND CATEGORY= #{category}
		    AND IS_DELETED = 'N'
		ORDER BY 
		    F.BOARD_ID DESC
		OFFSET #{page} ROWS FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	
	<select id="selectBoardCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*)
		FROM FREE_BOARD F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		WHERE 1=1
			<if test="searchOption != null and searchOption == 'all'">
		        AND (F.TITLE LIKE '%' || #{keyword} || '%' 
		        OR F.CONTENT LIKE '%' || #{keyword} || '%'
		        OR U.NICKNAME LIKE '%' || #{keyword} || '%'
		        OR F.USER_ID LIKE '%' || #{keyword} || '%')
		    </if>
		    <if test="searchOption != null and searchOption == 'title'">
		        AND F.TITLE LIKE '%' || #{keyword} || '%'
		    </if>
		 	<if test="searchOption != null and searchOption == 'userId'">
			    AND (F.USER_ID LIKE '%' || #{keyword} || '%'
		        OR U.NICKNAME LIKE '%' || #{keyword} || '%')
			</if>
			AND CATEGORY= #{category}
		    AND IS_DELETED = 'N'
	</select>
	
	<select id="selectBoard" parameterType="hashmap" resultType="teamgyodong.myky.board.model.board">
		SELECT F.*, U.*, TO_CHAR(F.CREATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS updatedTime
		FROM FREE_BOARD F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		WHERE F.BOARD_ID = #{boardId}
		AND F.CATEGORY= #{category}
	</select>
	
	<select id="selectCmtList" parameterType="hashmap" resultType="teamgyodong.myky.board.model.comment">
		SELECT F.*, U.*, TO_CHAR(F.UPDATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS updatedTime
		FROM FREE_BOARD_COMMENT F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		WHERE F.BOARD_ID = #{boardId} AND NVL(F.PARENT_COMMENT_ID,0) = 0 ORDER BY F.comment_id ASC
	</select>
	
	<select id="selectParentCmtList" parameterType="hashmap" resultType="teamgyodong.myky.board.model.comment">
		SELECT F.*, U.*, TO_CHAR(F.UPDATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS updatedTime
		FROM FREE_BOARD_COMMENT F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		WHERE F.BOARD_ID = #{boardId} AND F.parent_comment_id = #{parentId} ORDER BY F.comment_id ASC
	</select>
	
	<update id="updateCnt" parameterType="hashmap">
		UPDATE FREE_BOARD
		SET
			CNT = CNT + 1
		WHERE BOARD_ID = #{boardId}
	</update>

	
	<insert id="insertBoard" parameterType="hashmap" useGeneratedKeys="true" keyColumn="BOARD_ID" keyProperty="boardId">
		INSERT INTO FREE_BOARD(BOARD_ID, TITLE, CONTENT, CREATED_AT, UPDATED_AT, USER_ID, LIKES, DISLIKES, CATEGORY, CNT)
		VALUES(FREE_BOARD_SEQ.NEXTVAL, #{title}, #{content}, SYSDATE, SYSDATE, #{userId}, 0, 0, #{category}, 0)
	</insert>
	
	<update id="updateBoard" parameterType="hashmap">
		UPDATE FREE_BOARD
    	SET
        TITLE = #{title},
        CONTENT = #{content},
        UPDATED_AT = SYSDATE
		WHERE BOARD_ID = #{boardId}
	</update>
	
	<update id="updateRemoveBoard" parameterType="hashmap">
		UPDATE FREE_BOARD
		SET
		IS_DELETED = 'Y',
		UPDATED_AT = SYSDATE
		WHERE BOARD_ID = #{boardId}
	</update>
	
	<insert id="insertComment" parameterType="hashmap">
		INSERT INTO FREE_BOARD_COMMENT (COMMENT_ID, BOARD_ID, USER_ID, CONTENT, CREATED_AT, UPDATED_AT, IS_DELETED)
		VALUES(FREE_BOARD_COMMENT_SEQ.NEXTVAL, #{boardId}, #{userId}, #{content}, SYSDATE, SYSDATE, 'N')
	</insert>
		
	<update id="commentUpdate" parameterType="hashmap">
		UPDATE FREE_BOARD_COMMENT
    	SET
        CONTENT = #{content},
        UPDATED_AT = SYSDATE
		WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="deleteComment" parameterType="hashmap">
		UPDATE FREE_BOARD_COMMENT
		SET
			IS_DELETED = 'Y'
		WHERE COMMENT_ID = #{commentId}
	</update>
	
	<insert id="insertBoardFile" parameterType="hashmap">
		INSERT INTO FREE_BOARD_FILE
		VALUES(FREE_BOARD_FILE_SEQ.NEXTVAL, #{boardId}, #{fileName}, #{filePath}, #{originalName}, #{fileExt}, SYSDATE, #{fileSize})
	</insert>
	
	<select id="selectBoardImg" parameterType="hashmap" resultType="teamgyodong.myky.board.model.boardFile">
		SELECT * 
		FROM FREE_BOARD_FILE F
		LEFT JOIN FREE_BOARD B ON F.BOARD_ID = B.BOARD_ID
		WHERE F.BOARD_ID = #{boardId}
	</select>
	
	<delete id="deleteFile" parameterType="hashmap">
		DELETE FROM FREE_BOARD_FILE
		WHERE FILE_ID = #{fileId}
	</delete>

	<insert id="insertReply" parameterType="hashmap">
		INSERT INTO FREE_BOARD_COMMENT
		VALUES(FREE_BOARD_COMMENT_SEQ.NEXTVAL, #{boardId}, #{userId}, #{parentCommentId}, #{content}, SYSDATE, SYSDATE, 'N')
	</insert>
	
	<!-- Like Button-->
	<select id="selectLike" parameterType="hashmap" resultType="teamgyodong.myky.board.model.boardLikeLog" >
		SELECT *
		FROM FREE_BOARD_LIKE_LOG
		WHERE USER_ID = #{userId}
		  AND BOARD_ID = #{boardId}
	</select>
	
	<insert id="insertLikelog" parameterType="hashmap" >
		INSERT INTO FREE_BOARD_LIKE_LOG(BOARD_ID, USER_ID, STATUS)
		VALUES(#{boardId}, #{userId}, #{status})
	</insert>
	
	<delete id="deleteStatus" parameterType="hashmap">
		DELETE FROM FREE_BOARD_LIKE_LOG
		WHERE USER_ID = #{userId} AND BOARD_ID = #{boardId}
	</delete>
	
	<update id="updatelikeCntBoard" parameterType="hashmap">
		UPDATE FREE_BOARD
		SET
		    <if test="status != null and status == 'like'">
						LIKES = LIKES + #{finalstatus}
		    </if>
		    <if test="status != null and status == 'dislike'">
						DISLIKES = DISLIKES + #{finalstatus}
		    </if>		    
		WHERE BOARD_ID = #{boardId}
	</update>
	

	<!-- 수의사 게시판 -->
	<select id="selectVetBoardList" parameterType="hashmap" resultType="teamgyodong.myky.board.model.vetBoard" >
		SELECT F.*, U.*, TO_CHAR(F.CREATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS updatedTime,
			(SELECT COUNT(*)
			FROM VET_BOARD C
		    WHERE C.VET_BOARD_ID = F.VET_BOARD_ID) AS COMMENT_COUNT
		FROM VET_BOARD F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		WHERE 
		    1=1
		    <if test="searchOption != null and searchOption == 'all'">
		        AND (F.TITLE LIKE '%' || #{keyword} || '%' 
		        OR F.CONTENT LIKE '%' || #{keyword} || '%'
		        OR U.NICKNAME LIKE '%' || #{keyword} || '%'
		        OR F.USER_ID LIKE '%' || #{keyword} || '%')
		    </if>
		    <if test="searchOption != null and searchOption == 'title'">
		        AND F.TITLE LIKE '%' || #{keyword} || '%'
		    </if>
		 	<if test="searchOption != null and searchOption == 'userId'">
			    AND (F.USER_ID LIKE '%' || #{keyword} || '%'
		        OR U.NICKNAME LIKE '%' || #{keyword} || '%')
			</if>
		    AND IS_DELETED = 'N'
		ORDER BY 
		    F.VET_BOARD_ID DESC
		OFFSET #{page} ROWS FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	
	<select id="selectVetBoardCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*)
		FROM VET_BOARD F
		LEFT JOIN USERS U ON F.USER_ID = U.USER_ID
		WHERE 1=1
		<if test="searchOption != null and searchOption == 'all'">
		        AND (F.TITLE LIKE '%' || #{keyword} || '%'
		        OR F.CONTENT LIKE '%' || #{keyword} || '%'
		        OR U.NICKNAME LIKE '%' || #{keyword} || '%'
		        OR F.USER_ID LIKE '%' || #{keyword} || '%')
		    </if>
		    <if test="searchOption != null and searchOption == 'title'">
		        AND F.TITLE LIKE '%' || #{keyword} || '%'
		    </if>
		    <if test="searchOption != null and searchOption == 'userId'">
			    AND (F.USER_ID LIKE '%' || #{keyword} || '%'
		        OR U.NICKNAME LIKE '%' || #{keyword} || '%')
			</if>
		    AND F.IS_DELETED = 'N'
	</select>
	<select id="selectVetAnList" parameterType="hashmap" resultType="teamgyodong.myky.board.model.vetAnswer">
		SELECT F.*, U.*, V.*, TO_CHAR(F.CREATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS updatedTime
		FROM VET_BOARD F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		LEFT JOIN(
			SELECT *
			FROM VET_ANSWER
		) V ON F.VET_ID = V.VET_ID
		WHERE F.VET_BOARD_ID = #{vetBoardId}
	</select>
	<select id="selectVetBoard" parameterType="hashmap" resultType="teamgyodong.myky.board.model.vetBoard">
		SELECT F.*, U.*, TO_CHAR(F.CREATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS updatedTime
		FROM VET_BOARD F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		WHERE F.VET_BOARD_ID = #{vetBoardId}
	</select>
	<update id="updateVetBoardCnt" parameterType="hashmap">
		UPDATE VET_BOARD
		SET
			CNT = CNT + 1
		WHERE VET_BOARD_ID = #{vetBoardId}
	</update>
	
	<insert id="insertVetBoard" parameterType="hashmap">
		INSERT INTO VET_BOARD(VET_BOARD_ID, TITLE, CONTENT,  USER_ID, CREATED_AT, UPDATED_AT, IS_DELETED, CNT)
		VALUES(VET_BOARD_SEQ.NEXTVAL, #{title}, #{content}, #{userId}, SYSDATE, SYSDATE, 'N', 0)
	</insert>
	<update id="updateVetBoard" parameterType="hashmap">
		UPDATE VET_BOARD
		SET
			TITLE = #{title},
			CONTENT = #{content},
			CREATED_AT = SYSDATE
		WHERE VET_BOARD_ID = #{vetBoardId}
	</update>
	<update id="updateRemoveVetBoard" parameterType="hashmap">
		UPDATE VET_BOARD
		SET
		IS_DELETED = 'Y',
		UPDATED_AT = SYSDATE
		WHERE VET_BOARD_ID = #{vetBoardId}
	</update>
</mapper>



