<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamgyodong.myky.product.mapper.ProductMapper">

	<select id="selectProductList" parameterType="hashmap" resultType="teamgyodong.myky.product.model.Product">
		SELECT * 
		FROM PRODUCT P
		LEFT JOIN PRODUCT_FILE F ON P.PRODUCT_ID = F.PRODUCT_ID AND F.THUMBNAIL = 'Y'
		WHERE 1=1
		<if test="searchOption != null and searchOption == 'all'">
		    AND P.CATEGORY_ID LIKE '%' || #{keyword} || '%' 
		</if>
			<if test="searchOption != null and searchOption == 'search'">
		    AND P.PRODUCT_NAME LIKE '%' || #{keyword} || '%' 
		</if>
		<if test="searchOption != null and searchOption == 'dog'">
		    AND P.CATEGORY_ID LIKE '%' || '강아지' || '%'
		    AND P.CATEGORY_ID LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchOption != null and searchOption == 'cat'">
		    AND P.CATEGORY_ID LIKE '%' || '고양이' || '%'
		    AND P.CATEGORY_ID LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchOption != null and searchOption == 'pet'">
		    AND P.CATEGORY_ID LIKE '%' || '영양제' || '%'
		    AND P.CATEGORY_ID LIKE '%' || #{keyword} || '%'
		</if>
		ORDER BY P.CATEGORY_ID ASC
		OFFSET #{page} ROWS FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	 
	 <select id="selectProduct" parameterType="hashmap" resultType="teamgyodong.myky.product.model.Product">
	 	SELECT P.*, F.FILEPATH, F.FILENAME
		FROM PRODUCT P
		LEFT JOIN PRODUCT_FILE F ON P.PRODUCT_ID = F.PRODUCT_ID AND F.THUMBNAIL = 'Y'	
		WHERE P.PRODUCT_ID = #{productId}
	 </select>
	 
	 <select id="selectProductImg" parameterType="hashmap" resultType="teamgyodong.myky.product.model.Product">
	 	SELECT * 
		FROM PRODUCT_FILE
		WHERE PRODUCT_ID = #{productId}
	 </select>
	 
	 <select id="selectProductCnt" parameterType="hashmap" resultType="int">
	 	SELECT COUNT(*)
	 	FROM PRODUCT P
		LEFT JOIN PRODUCT_FILE F ON P.PRODUCT_ID = F.PRODUCT_ID AND F.THUMBNAIL = 'Y'
		WHERE 1=1
		<if test="searchOption != null and searchOption == 'all'">
		    AND (P.CATEGORY_ID LIKE '%' || #{keyword} || '%' )
		</if>
		<if test="searchOption != null and searchOption == 'search'">
		    AND P.PRODUCT_NAME LIKE '%' || #{keyword} || '%' 
		</if>
		<if test="searchOption != null and searchOption == 'dog'">
		    AND P.CATEGORY_ID LIKE '%' || '강아지' || '%'
		    AND P.CATEGORY_ID LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchOption != null and searchOption == 'cat'">
		    AND P.CATEGORY_ID LIKE '%' || '고양이' || '%'
		    AND P.CATEGORY_ID LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchOption != null and searchOption == 'pet'">
		    AND P.CATEGORY_ID LIKE '%' || '영양제' || '%'
		    AND P.CATEGORY_ID LIKE '%' || #{keyword} || '%'
		</if>
	 </select>
	
	  <!-- 리뷰 글쓰기 -->
	 <insert id="insertReview" parameterType="hashmap" useGeneratedKeys="true" keyColumn="REVIEW_ID" keyProperty="reviewId">
	 	INSERT INTO PRODUCT_REVIEWS (REVIEW_ID,USER_ID,RATING,REVIEW_TEXT,CREATED_AT,PRODUCT_ID, TITLE, HELPCNT) 
	 	VALUES (PRODUCT_REVIEWS_SEQ.NEXTVAL, #{userId}, #{rating}, #{reviewText}, SYSDATE, #{productId}, #{title}, 0)
	 </insert>
	 <!--리뷰 삭제 -->
	 <delete id="deleteReview" parameterType="hashmap">
		DELETE 
		FROM PRODUCT_REVIEWS 
		WHERE REVIEW_ID = #{reviewId}
	</delete>
	<!--리뷰 수정-->
	 <update id="UpdateReview" parameterType="hashmap" >
		UPDATE PRODUCT_REVIEWS
		SET
			TITLE = #{title},
			REVIEW_TEXT = #{reviewText},
			 RATING = #{rating}
		WHERE REVIEW_ID = #{reviewId}
	 </update>
	 <!--리뷰 가져오기 -->
	 <select id="selectReview"  parameterType="hashmap" resultType="teamgyodong.myky.product.model.Review">
	 	SELECT * 
		FROM PRODUCT_REVIEWS
		WHERE REVIEW_ID = #{reviewId}
		ORDER BY CREATED_AT DESC
	 </select>
	 
	 <!-- 리뷰 파일 업로드 -->
	 <insert id="insertReviewFile" parameterType="hashmap">
		INSERT INTO REVIEW_FILE 
		VALUES(REVIEW_FILE_SEQ.NEXTVAL, #{reviewId}, #{filePath},#{fileName},#{fileOrgname},#{fileSize}, #{fileEtc},#{thumbYn})
	</insert>
	
	<!--리뷰 이미지 -->
	<select id="selectReviewImg" parameterType="hashmap" resultType="teamgyodong.myky.product.model.Review">
		SELECT * 
		FROM REVIEW_FILE F
		LEFT JOIN PRODUCT_REVIEWS R ON F.REVIEW_ID = R.REVIEW_ID
		WHERE F.REVIEW_ID = #{reviewId}
	</select>

	 <!-- 리뷰 리스트 -->
	 <select id="selectReviewList" parameterType="hashmap" resultType="teamgyodong.myky.product.model.Review">
	    SELECT P.PRODUCT_ID, P.PRODUCT_NAME, R.REVIEW_ID, R.REVIEW_TEXT, R.RATING ,R.USER_ID, R.TITLE, R.CREATED_AT ,R.HELPCNT,F.*
		FROM PRODUCT P
		INNER JOIN PRODUCT_REVIEWS R ON P.PRODUCT_ID = R.PRODUCT_ID
		LEFT JOIN REVIEW_FILE F ON R.REVIEW_ID = F.REVIEW_ID AND F.THUMB_YN = 'Y'
		WHERE P.PRODUCT_ID = #{productId}
		ORDER BY CREATED_AT DESC
    	OFFSET #{page} ROWS FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	
	<!-- 리뷰 총 개수 -->
	<select id="selectReviewCount" parameterType="hashmap" resultType="int">
	    SELECT COUNT(*)
	    FROM PRODUCT_REVIEWS 
	    WHERE PRODUCT_ID = #{productId}
	</select>
	
	<!--도움돼요-->
	<select id="selectHelpfulByUser" parameterType="hashmap" resultType="int">
	    SELECT COUNT(*) 
	    FROM PRODUCT_REVIEWS
	    WHERE REVIEW_ID = #{reviewId} 
	      AND USER_ID = #{userId, jdbcType=VARCHAR}
	</select>
	
	<update id="updateHelpCnt" parameterType="hashmap">
	    UPDATE PRODUCT_REVIEWS
	    	SET HELPCNT = HELPCNT + 1
    	WHERE REVIEW_ID = #{reviewId}
	</update>

	<!--QnA 목록 조회-->
	<select id="selectQnaList" parameterType="hashmap" resultType="teamgyodong.myky.product.model.Qna">
	    SELECT *
	    FROM PRODUCT_QNA
	    WHERE PRODUCT_ID = #{productId}
	    ORDER BY QNA_ID DESC
	    OFFSET #{page} ROWS FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	<!--QnA 총 개수-->
	<select id="selectQnaCnt" parameterType="hashmap" resultType="int">
	    SELECT COUNT(*)
	    FROM PRODUCT_QNA 
	    WHERE PRODUCT_ID = #{productId}
	</select>
	
	<!-- QnA 글쓰기 -->
	 <insert id="insertQna" parameterType="hashmap" useGeneratedKeys="true" keyColumn="QNA_ID" keyProperty="qnaId">
	 	INSERT INTO PRODUCT_QNA ( QnA_ID, PRODUCT_ID, USER_ID, TITLE, QUESTION_TEXT, CREATED_AT) 
	 	VALUES (SEQ_PRODUCT_QNA.NEXTVAL, #{productId}, #{userId}, #{title}, #{questionText}, SYSDATE)
	 </insert>
	 
  <!--	QnA 상세 조회
	 <select id="selectQnaById" parameterType="hashmap" resultType="Qna">
	    SELECT * 
	    FROM PRODUCT_QNA
	    WHERE QNA_ID = #{qnaId}
	</select>-->
	
	<!-- QnA 글 삭제-->
	<delete id="deleteQna" parameterType="hashmap">
		DELETE 
		FROM PRODUCT_QNA 
		WHERE QNA_ID = #{qnaId} 
      		AND USER_ID = #{userId}
	</delete>
	
</mapper>




