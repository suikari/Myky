<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamgyodong.myky.manager.mapper.ManagerMapper">


	<select id="selectLogBrowserList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.Visit">
	
			select user_agent_browser, count(*) visit_count from VISIT_LOG 
			WHERE 1=1
			<if test="year != null and year != '' ">
		        AND  EXTRACT(YEAR FROM access_time) =  #{year} 
		    </if>
		    <if test="month != null and month != '' ">
		        AND  EXTRACT(MONTH FROM access_time) =  #{month} 
		    </if>
		    <if test="hour != null and hour != '' ">
		        AND  EXTRACT(HOUR FROM access_time) =  #{hour} 
		    </if>	
			group by user_agent_browser
			
	</select>
	
	
	<select id="selectLogDateList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.Visit">
	
			SELECT 
			     TO_CHAR(TRUNC(access_time), 'YYYY-MM-DD')   AS visitdate, 
			    COUNT(*) AS visit_count 
			FROM visit_log
			WHERE 1=1
			<if test="year != null and year != '' ">
		        AND  EXTRACT(YEAR FROM access_time) =  #{year} 
		    </if>
		    <if test="month != null and month != '' ">
		        AND  EXTRACT(MONTH FROM access_time) =  #{month} 
		    </if>
		    <if test="hour != null and hour != '' ">
		        AND  EXTRACT(HOUR FROM access_time) =  #{hour} 
		    </if>	
			GROUP BY TRUNC(access_time)
			ORDER BY visitdate			
			
	</select>
	
	<select id="selectLogTimeList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.Visit">
	
			SELECT 
			    EXTRACT(HOUR FROM access_time) AS visithour, 
			    COUNT(*) AS visit_count 
			FROM visit_log
			WHERE 1=1
			<if test="year != null and year != '' ">
		        AND  EXTRACT(YEAR FROM access_time) =  #{year} 
		    </if>
		    <if test="month != null and month != '' ">
		        AND  EXTRACT(MONTH FROM access_time) =  #{month} 
		    </if>
		    <if test="hour != null and hour != '' ">
		        AND  EXTRACT(HOUR FROM access_time) =  #{hour} 
		    </if>	
			GROUP BY EXTRACT(HOUR FROM access_time)
			ORDER BY visithour	
			
	</select>

	<select id="selectLogFristJoinBuy" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.mPay">

		SELECT 
		    COUNT(CASE WHEN p.PAYMENT_ID IS NOT NULL THEN 1 END) AS PURCHASED_MEMBERS,
		    COUNT(CASE WHEN p.PAYMENT_ID IS NULL THEN 1 END) AS NON_PURCHASED_MEMBERS
		FROM 
		    users u
		LEFT JOIN 
		    PAYMENT p ON u.USER_ID = p.USER_ID

	</select>

	<select id="selectProductList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.mProduct">
			select P.*  , 
			(SELECT COUNT(*)
		    FROM Product P ) AS productTotalCnt
			FROM Product P
	</select>
	
	
	<select id="selectPaymentList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.mPay">
			select P.*  , 
			(SELECT COUNT(*)
		    FROM payment P where nvl(P.subscription_period,0) = 0 ) AS paymentTotalCnt
			FROM payment P
			WHERE 1=1
		    <if test="year != null and year != '' ">
		        AND  EXTRACT(YEAR FROM PAYMENT_DATE) =  #{year} 
		    </if>
		    <if test="month != null and month != '' ">
		        AND  EXTRACT(MONTH FROM PAYMENT_DATE) =  #{month} 
		    </if>
		    <if test="hour != null and hour != '' ">
		        AND  EXTRACT(HOUR FROM PAYMENT_DATE) =  #{hour} 
		    </if>	
		    AND nvl(P.subscription_period,0) = 0
	</select>
	
	<select id="selectUserList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.mUser">
			select U.*  , 
			(SELECT COUNT(*)
		    FROM USERS ) AS userTotalCnt
			FROM USERS U
			WHERE 1=1
		    <if test="year != null and year != '' ">
		        AND  EXTRACT(YEAR FROM CREATED_AT) =  #{year} 
		    </if>
		    <if test="month != null and month != '' ">
		        AND  EXTRACT(MONTH FROM CREATED_AT) =  #{month} 
		    </if>
		    <if test="hour != null and hour != '' ">
		        AND  EXTRACT(HOUR FROM CREATED_AT) =  #{hour} 
		    </if>	
		    
	</select>	
	
	<select id="selectDonationList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.mDonation">
			select D.*  , 
			(SELECT COUNT(*)
		    FROM donation_history ) AS donationTotalCnt
			FROM donation_history D
			WHERE 1=1
		    <if test="year != null and year != '' ">
		        AND  EXTRACT(YEAR FROM DONATION_DATE) =  #{year} 
		    </if>
		    <if test="month != null and month != '' ">
		        AND  EXTRACT(MONTH FROM DONATION_DATE) =  #{month} 
		    </if>
		    <if test="hour != null and hour != '' ">
		        AND  EXTRACT(HOUR FROM DONATION_DATE) =  #{hour} 
		    </if>	
		    
	</select>	


	<select id="selectSearchRanking" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.manager">
	    SELECT SEARCH_TERM, COUNT(*) AS SEARCH_COUNT
	    FROM search_history
	    <where>
	        <if test="userId != null and userId != ''">
	            USER_ID = #{userId}
	        </if>
	    </where>
	    GROUP BY SEARCH_TERM
	    ORDER BY SEARCH_COUNT DESC
	    OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY

	</select>



	<delete id="deleteBoardList" parameterType="hashmap">
		UPDATE FREE_BOARD
		SET IS_DELETED = 'Y'
		WHERE BOARD_ID IN 
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
		AND CATEGORY = #{category}
	</delete>

	<delete id="deleteBoardCmtList" parameterType="hashmap">
		UPDATE FREE_BOARD_COMMENT
		SET IS_DELETED = 'Y'
		WHERE COMMENT_ID IN 
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	

	<select id="selectAllCmtList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.mComment">
		
		SELECT F.*, U.*, TO_CHAR(F.UPDATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS updatedTime , B.*
		FROM FREE_BOARD_COMMENT F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		LEFT JOIN FREE_BOARD B ON F.BOARD_ID = B.BOARD_ID
		WHERE 1=1 
		
		<if test="searchOption != null and searchOption == 'all'">
	        AND (F.CONTENT LIKE '%' || #{keyword} || '%' OR F.USER_ID LIKE '%' || #{keyword} || '%')
	    </if>
	    <if test="searchOption != null and searchOption == 'content'">
	        AND F.CONTENT LIKE '%' || #{keyword} || '%'
	    </if>
	    <if test="searchOption != null and searchOption == 'userId'">
	        AND F.USER_ID LIKE '%' || #{keyword} || '%'
	    </if>
		AND F.IS_DELETED = 'N'
		ORDER BY F.UPDATED_AT DESC
		
		<if test="page != null and pageSize != null" >
		    OFFSET #{page} ROWS FETCH NEXT #{pageSize} ROWS ONLY
		</if>
		

	</select>
	

	<select id="selectAllCmtCnt" parameterType="hashmap" resultType="int">
	
		SELECT COUNT(*)
		FROM FREE_BOARD_COMMENT F
		LEFT JOIN (
			SELECT *
			FROM USERS
		) U ON F.USER_ID = U.USER_ID
		LEFT JOIN FREE_BOARD B ON F.BOARD_ID = B.BOARD_ID
		WHERE 1=1 
		
		<if test="searchOption != null and searchOption == 'all'">
	        AND (F.CONTENT LIKE '%' || #{keyword} || '%' OR F.USER_ID LIKE '%' || #{keyword} || '%')
	    </if>
	    <if test="searchOption != null and searchOption == 'content'">
	        AND F.CONTENT LIKE '%' || #{keyword} || '%'
	    </if>
	    <if test="searchOption != null and searchOption == 'userId'">
	        AND F.USER_ID LIKE '%' || #{keyword} || '%'
	    </if>
	    AND F.IS_DELETED = 'N'

	</select>
	
	
	<select id="selectAllUserList" parameterType="hashmap" resultType="teamgyodong.myky.manager.model.mUser">
		
		select u.* , m.*
        from users u 
        left join  ( select membership_type, expiration_date , user_id
		from membership
		Where expiration_date >= sysdate) m 
        on u.user_id = m.user_id
        Where 1=1
	    <if test="searchOption != null and searchOption == 'userId'">
	        AND u.USER_ID LIKE '%' || #{keyword} || '%'
	    </if>
		ORDER BY U.CREATED_AT DESC
		<if test="page != null and pageSize != null" >
		    OFFSET #{page} ROWS FETCH NEXT #{pageSize} ROWS ONLY
		</if>
		

	</select>
	

	<select id="selectAllUserCnt" parameterType="hashmap" resultType="int">
	
		SELECT COUNT(*)
        from users u 
        left join  ( select membership_type, expiration_date , user_id
		from membership
		Where expiration_date >= sysdate) m 
        on u.user_id = m.user_id
        Where 1=1
	    <if test="searchOption != null and searchOption == 'userId'">
	        AND u.USER_ID LIKE '%' || #{keyword} || '%'
	    </if>

	</select>
	
	
	
	<select id="selectAllnotVetList" parameterType="hashmap"  resultType="teamgyodong.myky.manager.model.mUser">
	
		SELECT u.* 
		FROM users u
		LEFT JOIN veterinarian v ON u.USER_ID = v.USER_ID
		WHERE v.USER_ID IS NULL
		
	</select>
	
	<select id="selectAllVetList" parameterType="hashmap"  resultType="teamgyodong.myky.manager.model.Vet">
	
		SELECT *
		FROM veterinarian
		Where 1=1
	 	<if test="searchOption != null and searchOption == 'userId'">
	        AND NVL(USER_ID,' ') LIKE '%' || #{keyword} || '%'
	    </if>   
	     ORDER BY CREATED_AT DESC
		<if test="page != null and pageSize != null" >
		    OFFSET #{page} ROWS FETCH NEXT #{pageSize} ROWS ONLY
		</if>
		
	</select>
	
	
	<select id="selectAllVetCnt" parameterType="hashmap" resultType="int">
	
		SELECT COUNT(*)
        from veterinarian 
        Where 1=1
	    <if test="searchOption != null and searchOption == 'userId'">
	        AND  NVL(USER_ID,' ') LIKE '%' || #{keyword} || '%'
	    </if>
	    
	</select>
	

	
	<insert id="insertVet" parameterType="hashmap" useGeneratedKeys="true" keyColumn="vet_number" keyProperty="vetNumber">
		INSERT INTO veterinarian(vet_number,vet_id, name, email, phone_number, affiliated_hospital, last_active_time, created_at,updated_at,user_id)
		VALUES(VETERINARIAN_SEQ.NEXTVAL, #{vetId}, #{name}, email, phoneNumber, affiliatedHospital, null, SYSDATE, null, '')
	</insert>
	
	<update id="updateVet" parameterType="hashmap" >
		UPDATE veterinarian
		SET 
		<if test="vetId != null and vetId != ''">
			vet_id = #{vetId},
	    </if>
	    <if test="name != null and name != ''">
			name = #{name},
	    </if>
	    <if test="email != null and email != ''">
			email = #{email},
	    </if>
	    <if test="phoneNumber != null and phoneNumber != ''">
			phone_number = #{phoneNumber},
	    </if>
	    <if test="affiliatedHospital != null and affiliatedHospital != ''">
			affiliated_hospital = #{affiliatedHospital},
	    </if>
	    <if test="userId != null ">
			user_id = #{userId},
	    </if>				        	
		UPDATED_AT = SYSDATE
		WHERE vet_number = #{vetNumber}
	</update>
	
	

	<update id="updateUser" parameterType="hashmap" >
		UPDATE USERS
		SET 
		<if test="userName != null and userName != ''">
			USERNAME = #{userName},
	    </if>
	    <if test="nickName != null and nickName != ''">
			NICKNAME = #{nickName},
	    </if>
	    <if test="email != null and email != ''">
			EMAIL = #{email},
	    </if>
	    <if test="email != null and email != ''">
			EMAIL = #{email},
	    </if>
	    <if test="phoneNumber != null and phoneNumber != ''">
			PHONE_NUMBER = #{phoneNumber},
	    </if>
	    <if test="address != null and address != ''">
			ADDRESS = #{address},
	    </if>		
	    <if test="gender != null and gender != ''">
			GENDER = #{gender},
	    </if>			    
	    <if test="emailYn != null and emailYn != ''">
			EMAIL_YN = #{emailYn},
	    </if>			    
	    <if test="phoneYn != null and phoneYn != ''">
			PHONE_YN = #{phoneYn},
	    </if>			    
	    <if test="birthDate != null and birthDate != ''">
			BIRTH_DATE = #{birthDate},
	    </if>			    
	    <if test="address != null and address != ''">
			ADDRESS = #{address},
	    </if>	
	    <if test="profileImage != null and profileImage != ''">
			PROFILE_IMAGE = #{profileImage},
	    </if>
	    <if test="DeleteYn != null and DeleteYn != ''">
			Delete_Yn = #{DeleteYn},
	    </if>				        	
		UPDATED_AT = SYSDATE
		WHERE USER_ID = #{userId}
	</update>
	
	
	
</mapper>





